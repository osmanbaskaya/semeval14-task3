<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>Has</word>
            <lemma>have</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>3</CharacterOffsetEnd>
            <POS>VBZ</POS>
          </token>
          <token id="2">
            <word>anyone</word>
            <lemma>anyone</lemma>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>10</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="3">
            <word>used</word>
            <lemma>use</lemma>
            <CharacterOffsetBegin>11</CharacterOffsetBegin>
            <CharacterOffsetEnd>15</CharacterOffsetEnd>
            <POS>VBN</POS>
          </token>
          <token id="4">
            <word>HappyBidders</word>
            <lemma>HappyBidders</lemma>
            <CharacterOffsetBegin>16</CharacterOffsetBegin>
            <CharacterOffsetEnd>28</CharacterOffsetEnd>
            <POS>NNPS</POS>
          </token>
          <token id="5">
            <word>before</word>
            <lemma>before</lemma>
            <CharacterOffsetBegin>29</CharacterOffsetBegin>
            <CharacterOffsetEnd>35</CharacterOffsetEnd>
            <POS>IN</POS>
          </token>
          <token id="6">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>36</CharacterOffsetBegin>
            <CharacterOffsetEnd>39</CharacterOffsetEnd>
            <POS>CC</POS>
          </token>
          <token id="7">
            <word>won</word>
            <lemma>win</lemma>
            <CharacterOffsetBegin>40</CharacterOffsetBegin>
            <CharacterOffsetEnd>43</CharacterOffsetEnd>
            <POS>VBD</POS>
          </token>
          <token id="8">
            <word>something</word>
            <lemma>something</lemma>
            <CharacterOffsetBegin>44</CharacterOffsetBegin>
            <CharacterOffsetEnd>53</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="9">
            <word>before</word>
            <lemma>before</lemma>
            <CharacterOffsetBegin>54</CharacterOffsetBegin>
            <CharacterOffsetEnd>60</CharacterOffsetEnd>
            <POS>RB</POS>
          </token>
          <token id="10">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>60</CharacterOffsetBegin>
            <CharacterOffsetEnd>61</CharacterOffsetEnd>
            <POS>,</POS>
          </token>
          <token id="11">
            <word>Is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>62</CharacterOffsetBegin>
            <CharacterOffsetEnd>64</CharacterOffsetEnd>
            <POS>VBZ</POS>
          </token>
          <token id="12">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>65</CharacterOffsetBegin>
            <CharacterOffsetEnd>66</CharacterOffsetEnd>
            <POS>DT</POS>
          </token>
          <token id="13">
            <word>scam</word>
            <lemma>scam</lemma>
            <CharacterOffsetBegin>67</CharacterOffsetBegin>
            <CharacterOffsetEnd>71</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="14">
            <word>or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>72</CharacterOffsetBegin>
            <CharacterOffsetEnd>74</CharacterOffsetEnd>
            <POS>CC</POS>
          </token>
          <token id="15">
            <word>not</word>
            <lemma>not</lemma>
            <CharacterOffsetBegin>75</CharacterOffsetBegin>
            <CharacterOffsetEnd>78</CharacterOffsetEnd>
            <POS>RB</POS>
          </token>
          <token id="16">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>78</CharacterOffsetBegin>
            <CharacterOffsetEnd>79</CharacterOffsetEnd>
            <POS>.</POS>
          </token>
        </tokens>
        <parse>(ROOT (SQ (VBZ Has) (NP (NN anyone)) (VP (VP (VP (VBN used) (NP (NNPS HappyBidders)) (PP (IN before))) (CC and) (VP (VBD won) (NP (NN something)) (ADVP (RB before)))) (, ,) (VP (VBZ Is)) (NP (NP (DT a) (NN scam)) (CC or) (NP (RB not)))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">used</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">used</governor>
            <dependent idx="1">Has</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">used</governor>
            <dependent idx="2">anyone</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="4">HappyBidders</dependent>
          </dep>
          <dep type="prep">
            <governor idx="3">used</governor>
            <dependent idx="5">before</dependent>
          </dep>
          <dep type="cc">
            <governor idx="3">used</governor>
            <dependent idx="6">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="3">used</governor>
            <dependent idx="7">won</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="7">won</governor>
            <dependent idx="8">something</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">won</governor>
            <dependent idx="9">before</dependent>
          </dep>
          <dep type="dep">
            <governor idx="3">used</governor>
            <dependent idx="11">Is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">scam</governor>
            <dependent idx="12">a</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="13">scam</dependent>
          </dep>
          <dep type="cc">
            <governor idx="13">scam</governor>
            <dependent idx="14">or</dependent>
          </dep>
          <dep type="conj">
            <governor idx="13">scam</governor>
            <dependent idx="15">not</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">used</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">used</governor>
            <dependent idx="1">Has</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">used</governor>
            <dependent idx="2">anyone</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="4">HappyBidders</dependent>
          </dep>
          <dep type="prep">
            <governor idx="3">used</governor>
            <dependent idx="5">before</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">used</governor>
            <dependent idx="7">won</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="7">won</governor>
            <dependent idx="8">something</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">won</governor>
            <dependent idx="9">before</dependent>
          </dep>
          <dep type="dep">
            <governor idx="3">used</governor>
            <dependent idx="11">Is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">scam</governor>
            <dependent idx="12">a</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="13">scam</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="13">scam</governor>
            <dependent idx="15">not</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">used</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">used</governor>
            <dependent idx="1">Has</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">used</governor>
            <dependent idx="2">anyone</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">won</governor>
            <dependent idx="2">anyone</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="4">HappyBidders</dependent>
          </dep>
          <dep type="prep">
            <governor idx="3">used</governor>
            <dependent idx="5">before</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">used</governor>
            <dependent idx="7">won</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="7">won</governor>
            <dependent idx="8">something</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">won</governor>
            <dependent idx="9">before</dependent>
          </dep>
          <dep type="dep">
            <governor idx="3">used</governor>
            <dependent idx="11">Is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">scam</governor>
            <dependent idx="12">a</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="13">scam</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="3">used</governor>
            <dependent idx="15">not</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="13">scam</governor>
            <dependent idx="15">not</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>www.happybidders.com</word>
            <lemma>www.happybidders.com</lemma>
            <CharacterOffsetBegin>80</CharacterOffsetBegin>
            <CharacterOffsetEnd>100</CharacterOffsetEnd>
            <POS>NNP</POS>
          </token>
          <token id="2">
            <word>?</word>
            <lemma>?</lemma>
            <CharacterOffsetBegin>100</CharacterOffsetBegin>
            <CharacterOffsetEnd>101</CharacterOffsetEnd>
            <POS>.</POS>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (NP (NNP www.happybidders.com)) (. ?))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">www.happybidders.com</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">www.happybidders.com</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">www.happybidders.com</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>veracity</word>
            <lemma>veracity</lemma>
            <CharacterOffsetBegin>102</CharacterOffsetBegin>
            <CharacterOffsetEnd>110</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="2">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>111</CharacterOffsetBegin>
            <CharacterOffsetEnd>113</CharacterOffsetEnd>
            <POS>IN</POS>
          </token>
          <token id="3">
            <word>happybidders</word>
            <lemma>happybidder</lemma>
            <CharacterOffsetBegin>114</CharacterOffsetBegin>
            <CharacterOffsetEnd>126</CharacterOffsetEnd>
            <POS>NNS</POS>
          </token>
          <token id="4">
            <word>prize</word>
            <lemma>prize</lemma>
            <CharacterOffsetBegin>127</CharacterOffsetBegin>
            <CharacterOffsetEnd>132</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="5">
            <word>claims</word>
            <lemma>claim</lemma>
            <CharacterOffsetBegin>133</CharacterOffsetBegin>
            <CharacterOffsetEnd>139</CharacterOffsetEnd>
            <POS>NNS</POS>
          </token>
        </tokens>
        <parse>(ROOT (NP (NP (NP (NN veracity)) (PP (IN of) (NP (NNS happybidders)))) (NP (NN prize) (NNS claims)))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">veracity</dependent>
          </dep>
          <dep type="prep">
            <governor idx="1">veracity</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="2">of</governor>
            <dependent idx="3">happybidders</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">claims</governor>
            <dependent idx="4">prize</dependent>
          </dep>
          <dep type="dep">
            <governor idx="1">veracity</governor>
            <dependent idx="5">claims</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">veracity</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="1">veracity</governor>
            <dependent idx="3">happybidders</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">claims</governor>
            <dependent idx="4">prize</dependent>
          </dep>
          <dep type="dep">
            <governor idx="1">veracity</governor>
            <dependent idx="5">claims</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">veracity</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="1">veracity</governor>
            <dependent idx="3">happybidders</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">claims</governor>
            <dependent idx="4">prize</dependent>
          </dep>
          <dep type="dep">
            <governor idx="1">veracity</governor>
            <dependent idx="5">claims</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
