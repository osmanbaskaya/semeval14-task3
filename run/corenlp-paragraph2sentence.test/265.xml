<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>That</word>
            <lemma>that</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>4</CharacterOffsetEnd>
            <POS>DT</POS>
          </token>
          <token id="2">
            <word>'s</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>6</CharacterOffsetEnd>
            <POS>VBZ</POS>
          </token>
          <token id="3">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>7</CharacterOffsetBegin>
            <CharacterOffsetEnd>8</CharacterOffsetEnd>
            <POS>DT</POS>
          </token>
          <token id="4">
            <word>seriously</word>
            <lemma>seriously</lemma>
            <CharacterOffsetBegin>9</CharacterOffsetBegin>
            <CharacterOffsetEnd>18</CharacterOffsetEnd>
            <POS>RB</POS>
          </token>
          <token id="5">
            <word>hench</word>
            <lemma>hench</lemma>
            <CharacterOffsetBegin>19</CharacterOffsetBegin>
            <CharacterOffsetEnd>24</CharacterOffsetEnd>
            <POS>JJ</POS>
          </token>
          <token id="6">
            <word>doorman</word>
            <lemma>doorman</lemma>
            <CharacterOffsetBegin>25</CharacterOffsetBegin>
            <CharacterOffsetEnd>32</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="7">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>32</CharacterOffsetBegin>
            <CharacterOffsetEnd>33</CharacterOffsetEnd>
            <POS>.</POS>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (DT That)) (VP (VBZ 's) (NP (DT a) (ADJP (ADVP (RB seriously)) (JJ hench)) (NN doorman))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">doorman</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">doorman</governor>
            <dependent idx="1">That</dependent>
          </dep>
          <dep type="cop">
            <governor idx="6">doorman</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="det">
            <governor idx="6">doorman</governor>
            <dependent idx="3">a</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="5">hench</governor>
            <dependent idx="4">seriously</dependent>
          </dep>
          <dep type="amod">
            <governor idx="6">doorman</governor>
            <dependent idx="5">hench</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">doorman</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">doorman</governor>
            <dependent idx="1">That</dependent>
          </dep>
          <dep type="cop">
            <governor idx="6">doorman</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="det">
            <governor idx="6">doorman</governor>
            <dependent idx="3">a</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="5">hench</governor>
            <dependent idx="4">seriously</dependent>
          </dep>
          <dep type="amod">
            <governor idx="6">doorman</governor>
            <dependent idx="5">hench</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">doorman</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">doorman</governor>
            <dependent idx="1">That</dependent>
          </dep>
          <dep type="cop">
            <governor idx="6">doorman</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="det">
            <governor idx="6">doorman</governor>
            <dependent idx="3">a</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="5">hench</governor>
            <dependent idx="4">seriously</dependent>
          </dep>
          <dep type="amod">
            <governor idx="6">doorman</governor>
            <dependent idx="5">hench</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>34</CharacterOffsetBegin>
            <CharacterOffsetEnd>35</CharacterOffsetEnd>
            <POS>DT</POS>
          </token>
          <token id="2">
            <word>big</word>
            <lemma>big</lemma>
            <CharacterOffsetBegin>36</CharacterOffsetBegin>
            <CharacterOffsetEnd>39</CharacterOffsetEnd>
            <POS>JJ</POS>
          </token>
          <token id="3">
            <word>bouncer</word>
            <lemma>bouncer</lemma>
            <CharacterOffsetBegin>40</CharacterOffsetBegin>
            <CharacterOffsetEnd>47</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (NP (DT a) (JJ big) (NN bouncer)))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">bouncer</dependent>
          </dep>
          <dep type="det">
            <governor idx="3">bouncer</governor>
            <dependent idx="1">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">bouncer</governor>
            <dependent idx="2">big</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">bouncer</dependent>
          </dep>
          <dep type="det">
            <governor idx="3">bouncer</governor>
            <dependent idx="1">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">bouncer</governor>
            <dependent idx="2">big</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">bouncer</dependent>
          </dep>
          <dep type="det">
            <governor idx="3">bouncer</governor>
            <dependent idx="1">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">bouncer</governor>
            <dependent idx="2">big</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
