\documentclass[11pt]{article}
\usepackage{semeval2014}
\usepackage{times}
\usepackage{url}
\usepackage{multirow}
\usepackage{latexsym}
\usepackage{rotating}
\usepackage{booktabs}
\usepackage{graphicx}





%\setlength\titlebox{5cm}

% You can expand the titlebox if you need extra space
% to show all the authors. Please do not make the titlebox
% smaller than 5cm (the original size); we will check this
% in the camera-ready version and ask you to change it back.

\newcommand{\wsname}{SemEval-2014}
\newcommand{\submissionpage}{\url{http://alt.qcri.org/semeval2014/index.php?id=cfp}}
\newcommand{\filename}{semeval2014}
\newcommand{\contact}{pnakov qf.org.qa}

\title{AI-KU: Paper Title}

\author{First Author \\
  Affiliation / Address line 1 \\
  Affiliation / Address line 2 \\
  Affiliation / Address line 3 \\
  {\tt email@domain} \\\And
  Second Author \\
  Affiliation / Address line 1 \\
  Affiliation / Address line 2 \\
  Affiliation / Address line 3 \\
  {\tt email@domain} \\}

\date{}

\begin{document}
\maketitle
\begin{abstract}

\end{abstract}

\section{Introduction}
\label{intro}

\begin{table*}
  \resizebox{\textwidth}{!}{
  \centering
  \begin{tabular}{r||c||c}
    \toprule
    % \cmidrule{2-3} \cmidrule{3-3}
               Word & Context & Substitutes \\
                \hline
the & $<$s$>$ \_\_\_ dog & $w_1$ (0.01), $w_2$ (0.53),  $w_3$ (0.13), ..., $w_n$ (0.02) \\ 
dog & the \_\_\_ bites & $w_1$ (0.01), $w_2$ (0.1),  $w_3$ (0.05), ..., $w_n$ (0.01) \\ 
bites & dog \_\_\_ $<$/s$>$ & $w_1$ (0.03), $w_2$ (0.23),  $w_3$ (0.04), ..., $w_n$ (0.01) \\
\bottomrule
  \end{tabular}}
\caption{Contexts when using a bigram language model}
\label{tab:subs_exp}
\end{table*}

\section{Algorithm}
\label{algorithm}

In this section, we will explain preprocessing steps of the data and the details of our two participated systems\footnote{The code to replicate our work can be found \emph{input github repo link here}.} for this task. Both systems rely on the co-occurrence statistics. The slight differences between the first and the second system is that the first one uses the words occur in the text (e.g., paragraph, sentence etc.), whereas the second system employs co-occurrence statistics on 100 most likely substitutes of each occurred word in text. 

\subsection{Data Preprocessing}

\begin{table}
\begin{center}
\begin{tabular}{|r|c|}
\hline \bf ID & \bf Token \\ \hline
R2 & how \\
R2 & blog \\
R2 & popular \\
\hline
\end{tabular}
\end{center}
\caption{\label{tab:system1_input} Input example for AI-KU$_1$.}
\end{table}





\begin{table}[t]
\begin{center}
\resizebox{\columnwidth}{!}{
\begin{tabular}{|l|c|c|c|}
\hline & \bf System & \bf Pearson & \bf Spearman  \\ 
% \hline
% \multicolumn{5}{|c|}{Test Set} \\
\hline
\multirow{9}{*}{\rotatebox{90}{\small{Paragraph-2-Sentence}}}
& Best & 0.837 & 0.821 \\
& $2^{nd}$ Best & 0.834 & 0.820 \\
& $3^{rd}$ Best & 0.826 & 0.817 \\
& AI-KU$_1$ & 0.732 & 0.727 \\
& AI-KU$_2$ & 0.698 & 0.700 \\
& LCS & 0.527 & 0.613 \\ 
& lch & 0.125 & 0.114 \\
& jcn & 0.107 & 0.106 \\
& JI & 0.640  & 0.687 \\ \hline
\end{tabular}}
\end{center}
\caption{\label{table:results-p2s} Paragraph-2-Sentence subtask scores for the test set. \emph{Best} indicates the best score for the subtasks. LCS stands for Normalized Longest Common Substring. Subscripts in AI-KU systems indicate the run number.}
\end{table}

\begin{table}[t]
\begin{center}
\resizebox{\columnwidth}{!}{
\begin{tabular}{|l|c|c|c|}
\hline & \bf System & \bf Pearson & \bf Spearman  \\ 
% \hline
% \multicolumn{5}{|c|}{Test Set} \\
\hline
\multirow{9}{*}{\rotatebox{90}{\small{Sentence-2-Phrase}}}
& Best & 0.777 & 0.642 \\
& $2^{nd}$ Best & 0.771 & 0.760 \\
& $3^{rd}$ Best & 0.760 & 0.757 \\
& AI-KU$_1$ & 0.680 & 0.646 \\
& AI-KU$_2$ & 0.617 & 0.612 \\ 
& LCS & 0.562 & 0.626 \\ 
& lch & 0.420 & 0.431 \\
& jcn & 0.469 & 0.535 \\
& JI & 0.540 & 0.555 \\ \hline
\end{tabular}}


\end{center}
\caption{\label{table:results-s2p} Sentence2phrase subtask scores for the test set. \emph{Best} indicates the best score for the subtasks. LCS stands for Normalized Longest Common Substring. Subscripts in AI-KU systems indicate the run number.}
\end{table}

Two AI-KU systems distinguishes between each other on input of co-occurrence modeling part. 

\paragraph{AI-KU$_1$:} This system uses the words that observed in the text. All words are translated into lower-case equivalents. Lemmatization\footnote{Stanford CoreNLP is used for lemmatization.}, stop-word removing\footnote{Python NLTK library is used.} has been done and finally non-alphanumeric characters are excluded. Table \ref{tab:system1_input} shows the input of the AI-KU$_1$ for the following sentence which is an instance from paragraph2sentence test set:

\begin{quote}
How can my blog be more popular?
\end{quote}




\paragraph{AI-KU$_2$:} Unlike the first system, this system represents each context of a word by finding the most likely substitutes suggested by the 4-gram language model we built from ukWaC\footnote{Available here: http://wacky.sslmit.unibo.it} \cite{ukWaC}, a 2-billion word web-gathered corpus. This high probability substitutes work successfully on Word Sense Induction (WSI) \emph{cite semeval 2013} and Part-of-Speech Induction \emph{Mali \& Enis work} problems. We used the 100 most likely substitute for each context. No lemmatization, stop word removing and lower-case transformation has been done. Table~\ref{tab:subs_exp} illustrates the context and substitutes of each context using a bigram language model.



\subsection{Co-Occurrence Modeling}

This subsection will explain the unsupervised methods we employed to model co-occurrence statistics: the Co-occurrence data Embedding (CODE) method \cite{globerson-CODE} and its spherical extension (S-CODE) proposed by Maron et al. \shortcite{Maron2010}. Unlike our previous WSI work \cite{baskaya13ai} where we ended up with an embedding for each
word in the co-occurrence modeling step, in this task however, we try to model each text unit such as a paragraph, a sentence or a phrase, thus, after this step, we obtain embeddings for each paragraph, sentence and phrase instance. 

Input data for S-CODE algorithm were instance-id of the text unit and the each word in the text unit for the first system, the 100 most likely substitutes of each word in text for the second system. In the initial step, S-CODE puts all instance-ids and words/substitutes randomly on n-dimensional sphere. If two different instances have the same word/substitute, then these two instances attract each other, otherwise they will repel. When S-CODE converges, instances have similar words/substitutes will be closely located, instances have no similar words/substitutes will be far from each other. 



\subsection{Similarity Calculation}

When the S-CODE converges, we have an n-dimensional embedding for each textual level (e.g., paragraph, sentence, phrase) instance. We can use a similarity metric to calculate 
the similarity between embeddings. For this task, systems should report only the similarity between two specific cross level instances. Note that we used cosine similarity in order to calculate similarity between two textual unit. \emph{How about the other metrics? Make a test and input the reason why we use cosine similarity}. This similarity is the eventual similarity for two instances; no further processing (e.g., scaling) has been done.

% Bag of words
% Dimensionlar farkliydi iki subtask icin.
% Aklimda kalan birinde substitute digerinde direk surface form'lar kullanildi SCODE icin, ama su an kafam karisti, enrichment mi yaptik subs yerine? SUB sanirim.
% Unsupervised oldugumuzu dile getirelim. Baslikta filan da dile getirilebilir.
% 2 task'e katildik, bunlar p2s s2p. Context enrichment yapildi ukwac ile fakat training'te daha kotu sonuclar elde edildi. 
% Stanford CoreNLP kullanildi lemmatize edilirken.
% Iki deney yapildi, biri sentence icindeki kelimeleri vererek yakinlik hesaplamak, digeri once substitute'larini onlari kullanarak iki text'in yakinliginin hesaplanmasi, LM olarak ukwac kullanildi (detaylari gir), 100 subs alindi, alphanumeric olmayan karakterlerden temizlendi (makefile'a bak gen-p2s-input targeti. Sonradan edit galiba bu alakasiz ir sey) lowercase'e gecildi
% Jaccard index baseline'indan ve diger baseline'lardan bahsedilebilir.
% Training setteki sonuclar ve test setteki sonuclara ait tablo,
% Ayri ayri genre scorelari uzerinden tablo. David burada bi genre'de cok iyi yaptigimizi soylemisti.
% Enrichment yapilmadi, ama test datasinda sonuclar alinirken training datasi da kullanildi.




\section{Evaluation Results}
\label{evaluation}

In this task, systems were evaluated with two correlation metrics; Pearson correlation and Spearman's rank correlation.  Pearson correlation tests the degree of similarity between the system's similarity ratings and the gold standard ratings.  Spearman's rho tests the degree of similarity between the rankings of the items according to similarity.

Table \ref{table:results-p2s} and \ref{table:results-s2p} show the scores for Paragraph-2-Sentence and Sentence-2-Phrase subtasks, respectively. These tables contain the best individual scores for the performance metrics, Normalized Longest Common Substring (LCS) baseline which is given by task organizers and three additional baselines: lch \cite{leacock1998combining}, jcn \cite{jiang1997semantic}, and Jaccard Index (JI) baseline. jcn uses information content \cite{resnik1995inforcontent} of the least common subsumer (LCS) of concepts A and B. Information content indicates the specificity of a concept and LCS of a concept A and B is the most specific concept from which A and B inherited. \emph{Paraphrase: jcn measure augments the information content of the LCS with the sum of the information content of concepts A and B themselves and takes the difference of this sum and the information content of the LCS.} On the other hand, \emph{Paraphrase: lch is based on path lengths between a pair of concepts. It finds the shortest path between two concepts, and scales that value by the maximum path length found in the is–a hierarchy in which they occur} (please see Pedersen et al. \shortcite{pedersen2004wordnet} for further details of these measures). These two baselines were calculated as follows. First, using the Stanford Part-of-Speech Tagger \cite{toutanova2000enriching} we tagged words in all textual levels. After tagging, we found the synsets of each word matched with its part-of-speech using WordNet 3.0 \cite{fellbaum98electronic}. For each synset of a word in the shorter textual unit (e.g., sentence is shorter than paragraph), we calculated the jcn/lch measure of each synset of all words in the longer textual unit and picked the highest score. When we found the scores for all words, we sum them up and normalized it with the length of the shorter textual unit. This gave us the similarity between one pair in the test set. Finally, Jaccard Index baseline simply calculates the number of words in common (intersection) with two cross textual levels, normalized by the total number of words (union). 

Both AI-KU systems outperformed the Normalized Longest Common Substring (LCS) baseline. 


% genre information'inina gore karsilastirma yapilabilir?


\section{Conclusion}
\label{conclusion}

% syntactic information'a bakilmadan iyi sonuclar elde edildi, future work olarak SCODE'a syntax'in da handle edilebilecegi feature'lar eklenecek.

% \ref, \noindent, \shortcite, \cite, \url

\section*{Acknowledgements}

% include your own bib file like this:
\bibliographystyle{acl}
\bibliography{references}



\end{document}
